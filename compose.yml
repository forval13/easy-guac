# The initial login to the guacamole webinterface is:
#
#     Username: guacadmin
#     Password: guacadmin
#
# Make sure you change it immediately!
#
#####################################################################################

# networks
# - create a network 'guacnetwork_compose' in mode 'bridged'
networks:
  network1:
    name: "${NETWORK_NAME}"
    driver: bridge

# services
services:

  # guacd
  guacd:
    container_name: "${GUACD_CONTAINER_NAME}"
    image: guacamole/guacd
    networks:
      network1:
        name: "${NETWORK_NAME}"  
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw
    restart: always

  # postgres
  postgres:
    container_name: "${POSTGRES_CONTAINER_NAME}"
    image: postgres:15.2-alpine
    #env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: "${POSTGRES_DATABASE}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
    networks:
      network1:
        name: "${NETWORK_NAME}"
    volumes:
    # DB-Init script is in './init/initdb.sql' it has been created executing
    # 'docker run --rm guacamole/guacamole /opt/guacamole/bin/initdb.sh --postgresql > ./init/initdb.sql' once.
    # The initdb.d scripts are only executed the first time the container is started (and the database files are empty). 
    # If the database files already exist then the initdb.d scripts are ignored.
    # Folder './init' should be executable (chmod +x ./init) or 'initdb.sql' will be ignored!
    - ./init:/docker-entrypoint-initdb.d:z
    # Data-dir will hold all data after first start. To start from scratch delete './data' dir completely.
    - ./data:/var/lib/postgresql/data:Z
    restart: always

  # guacamole
  guacamole:
    container_name: "${GUACAMOLE_CONTAINER_NAME}"
    image: guacamole/guacamole
    depends_on:
    - guacd
    - postgres
    #env_file: .env
    environment:
      GUACD_HOSTNAME: "${GUACD_HOSTNAME}"
      POSTGRES_DATABASE: "${POSTGRES_DATABASE}"
      POSTGRES_HOSTNAME: "${POSTGRES_HOSTNAME}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
    links:
    - guacd
    networks:
      network1:
        name: "${NETWORK_NAME}"
    ports:
## enable next line if not using nginx
##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    - 8080/tcp
    restart: always

########### optional ##############
  # nginx
  nginx:
   container_name: "${NGINX_CONTAINER_NAME}"
   image: nginx
   links:
   - guacamole
   networks:
      network1:
        name: "${NETWORK_NAME}"
   ports:
   #  nginx exports port 8443 to the outside world, all other traffic is only internal.
   - 8443:443
   volumes:
   #  ./nginx/templates folder will be mapped read-only into the container at /etc/nginx/templates
   #  and according to the official nginx container docs the guacamole.conf.template will be
   #  placed in /etc/nginx/conf.d/guacamole.conf after container startup.
   - ./nginx/templates:/etc/nginx/templates:ro
   #  ./nginx/ssl will be mapped into the container at /etc/nginx/ssl
   #  prepare.sh creates a a self-signed certificate. If you want to use your own certs
   #  just remove the part that generates the certs from prepare.sh and replace
   #  'self-ssl.key' and 'self.cert' with your certificate.
   - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
   - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
   restart: always
#####################################################################################
